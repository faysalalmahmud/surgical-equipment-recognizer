{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"gpuType":"T4","mount_file_id":"1pRGn6rtNF1BpVtvWWUFjOLHHnElDuHLi","authorship_tag":"ABX9TyPzbcRqvKm2AUUwXdOPtXSw"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU"},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"0oERykTXs2n8","executionInfo":{"status":"ok","timestamp":1758113236042,"user_tz":-360,"elapsed":7636,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}}},"outputs":[],"source":["!pip install -Uqq fastai"]},{"cell_type":"code","source":["from fastai.vision.all import *"],"metadata":{"id":"gBBmctmHtfu6","executionInfo":{"status":"ok","timestamp":1758113317911,"user_tz":-360,"elapsed":5,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}}},"execution_count":6,"outputs":[]},{"cell_type":"code","source":["%cd /content/drive/MyDrive/Data Science/Mastercourse cohort 7/Surgical Equipment Recognizer"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"x_pqZiRBtoEf","executionInfo":{"status":"ok","timestamp":1758114110784,"user_tz":-360,"elapsed":73,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"6029600f-7028-4526-8e7a-e146c8265116"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stdout","text":["/content/drive/MyDrive/Data Science/Mastercourse cohort 7/Surgical Equipment Recognizer\n"]}]},{"cell_type":"code","metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"191882fa","executionInfo":{"status":"ok","timestamp":1758118143320,"user_tz":-360,"elapsed":4632,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"11a7b1a5-ed9c-4e63-a3ef-14cd65248a3c"},"source":["# Load the three models\n","learn1 = load_learner('models/surgical_equipment_recognizer_model_v2_1.pkl')\n","learn2 = load_learner('models/surgical_equipment_recognizer_model_v1_2.pkl')\n","learn3 = load_learner('models/surgical_equipment_recognizer_model_v2.pkl')"],"execution_count":50,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.12/dist-packages/fastai/learner.py:455: UserWarning: load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\n","If you only need to load model weights and optimizer state, use the safe `Learner.load` instead.\n","  warn(\"load_learner` uses Python's insecure pickle module, which can execute malicious arbitrary code when loading. Only load files you trust.\\nIf you only need to load model weights and optimizer state, use the safe `Learner.load` instead.\")\n"]}]},{"cell_type":"markdown","source":["## Inference 1"],"metadata":{"id":"9vh1zIc8h1DX"}},{"cell_type":"code","source":["image = Image.open('test_images/allis.jpg')\n","image.to_thumb(128,128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"id":"rzR1UHE8h0a_","executionInfo":{"status":"ok","timestamp":1758118146073,"user_tz":-360,"elapsed":51,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"268f74d7-21e1-4f33-9049-168bad1c3a7a"},"execution_count":51,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=128x128>"],"image/png":"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\n","image/jpeg":"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\n"},"metadata":{},"execution_count":51}]},{"cell_type":"code","source":["# Get prediction, prediction index, and probabilities for each model\n","pred1, pred_idx1, probs1 = learn1.predict(image)\n","pred2, pred_idx2, probs2 = learn2.predict(image)\n","pred3, pred_idx3, probs3 = learn3.predict(image)\n","\n","print(f'Model 1 Prediction: {pred1}, Confidence: {probs1[pred_idx1]:.4f}')\n","print(f'Model 2 Prediction: {pred2}, Confidence: {probs2[pred_idx2]:.4f}')\n","print(f'Model 3 Prediction: {pred3}, Confidence: {probs3[pred_idx3]:.4f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":69},"id":"HNxb29QirnXP","executionInfo":{"status":"ok","timestamp":1758118149315,"user_tz":-360,"elapsed":460,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"b649a358-2475-40ca-a7d3-60af95a74465"},"execution_count":52,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model 1 Prediction: Allis Clamp, Confidence: 0.6546\n","Model 2 Prediction: Allis Clamp, Confidence: 0.4941\n","Model 3 Prediction: Allis Clamp, Confidence: 0.6891\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"YyTen0I3sQur"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Inference 2"],"metadata":{"id":"D3F56-lI38gm"}},{"cell_type":"code","source":["image = Image.open('test_images/scalp.webp')\n","image.to_thumb(128,128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"id":"tWJIDpFg37ao","executionInfo":{"status":"ok","timestamp":1758118167909,"user_tz":-360,"elapsed":68,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"927a301c-fb49-46b3-dd1d-bf92d22bc12f"},"execution_count":53,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=128x128>"],"image/png":"\n","image/jpeg":"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\n"},"metadata":{},"execution_count":53}]},{"cell_type":"code","source":["# Get prediction, prediction index, and probabilities for each model\n","pred1, pred_idx1, probs1 = learn1.predict(image)\n","pred2, pred_idx2, probs2 = learn2.predict(image)\n","pred3, pred_idx3, probs3 = learn3.predict(image)\n","\n","print(f'Model 1 Prediction: {pred1}, Confidence: {probs1[pred_idx1]:.4f}')\n","print(f'Model 2 Prediction: {pred2}, Confidence: {probs2[pred_idx2]:.4f}')\n","print(f'Model 3 Prediction: {pred3}, Confidence: {probs3[pred_idx3]:.4f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":69},"id":"Qpasg5gn4EXc","executionInfo":{"status":"ok","timestamp":1758118172329,"user_tz":-360,"elapsed":707,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"5503c500-ef8a-43c5-8a21-b9b3a43cd9a2"},"execution_count":54,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model 1 Prediction: Curette, Confidence: 0.5071\n","Model 2 Prediction: Forceps (DeBakey), Confidence: 0.4801\n","Model 3 Prediction: Scalpel, Confidence: 0.6336\n"]}]},{"cell_type":"markdown","source":["## Inference 3"],"metadata":{"id":"beF9t7yx4ihp"}},{"cell_type":"code","source":["image = Image.open('test_images/forcep.jpeg')\n","image.to_thumb(128,128)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":145},"executionInfo":{"status":"ok","timestamp":1758118182001,"user_tz":-360,"elapsed":75,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"f767b785-4a56-444f-84a1-e6cc0c81a7e9","id":"-KTHTK214ihq"},"execution_count":55,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<PIL.Image.Image image mode=RGB size=96x128>"],"image/png":"\n","image/jpeg":"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\n"},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["# Get prediction, prediction index, and probabilities for each model\n","pred1, pred_idx1, probs1 = learn1.predict(image)\n","pred2, pred_idx2, probs2 = learn2.predict(image)\n","pred3, pred_idx3, probs3 = learn3.predict(image)\n","\n","print(f'Model 1 Prediction: {pred1}, Confidence: {probs1[pred_idx1]:.4f}')\n","print(f'Model 2 Prediction: {pred2}, Confidence: {probs2[pred_idx2]:.4f}')\n","print(f'Model 3 Prediction: {pred3}, Confidence: {probs3[pred_idx3]:.4f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":69},"executionInfo":{"status":"ok","timestamp":1758118187011,"user_tz":-360,"elapsed":477,"user":{"displayName":"Faysal Al Mahmud","userId":"12840096608829510435"}},"outputId":"dbd0bc50-3ea0-4802-9f42-49f55caa1e83","id":"Qw5w0Amq4ihq"},"execution_count":56,"outputs":[{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":["\n","<style>\n","    /* Turns off some styling */\n","    progress {\n","        /* gets rid of default border in Firefox and Opera. */\n","        border: none;\n","        /* Needs to be in here for Safari polyfill so background images work as expected. */\n","        background-size: auto;\n","    }\n","    progress:not([value]), progress:not([value])::-webkit-progress-bar {\n","        background: repeating-linear-gradient(45deg, #7e7e7e, #7e7e7e 10px, #5c5c5c 10px, #5c5c5c 20px);\n","    }\n","    .progress-bar-interrupted, .progress-bar-interrupted::-webkit-progress-bar {\n","        background: #F44336;\n","    }\n","</style>\n"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<IPython.core.display.HTML object>"],"text/html":[]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["Model 1 Prediction: Forceps (Adson), Confidence: 0.9753\n","Model 2 Prediction: Curette, Confidence: 0.6862\n","Model 3 Prediction: Forceps (Adson), Confidence: 0.8180\n"]}]},{"cell_type":"markdown","source":["##"],"metadata":{"id":"qtMJJBIPsVra"}}]}